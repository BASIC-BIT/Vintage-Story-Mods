<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApacheTech.Common.Extensions</name>
    </assembly>
    <members>
        <member name="T:ApacheTech.Common.Extensions.Enum.ColourChannel">
            <summary>
                Specifies a single colour channel within an ARGB colour.
            </summary>
        </member>
        <member name="F:ApacheTech.Common.Extensions.Enum.ColourChannel.A">
            <summary>
                The Alpha channel.
            </summary>
        </member>
        <member name="F:ApacheTech.Common.Extensions.Enum.ColourChannel.R">
            <summary>
                The Red channel.
            </summary>
        </member>
        <member name="F:ApacheTech.Common.Extensions.Enum.ColourChannel.G">
            <summary>
                The Green channel.
            </summary>
        </member>
        <member name="F:ApacheTech.Common.Extensions.Enum.ColourChannel.B">
            <summary>
                The Blue channel.
            </summary>
        </member>
        <member name="T:ApacheTech.Common.Extensions.Functional.MonadicLinqExtensions">
            <summary>
                Extension methods for monadic functions.
            </summary>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.MonadicLinqExtensions.Map``2(``0,System.Func{``0,``1})">
            <summary>
                Executes a function that converts one type, to another.
            </summary>
            <typeparam name="TFromType">The type to map from.</typeparam>
            <typeparam name="TToType">The type to map to.</typeparam>
            <param name="this">The input value.</param>
            <param name="f">The function that converts the input value, to an output type.</param>
            <returns>An instance of <typeparamref name="TToType"/>, converted from the input value.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.MonadicLinqExtensions.Alt``2(``0,System.Func{``0,``1},System.Func{``0,``1})">
            <summary>
                Executes a function on a value, and if that function does not produce a valid result, performs a second action.
            </summary>
            <typeparam name="TInput">The type of the input value.</typeparam>
            <typeparam name="TOutput">The type of the output value.</typeparam>
            <param name="this">The input value.</param>
            <param name="f1">The initial function to execute on the input value.</param>
            <param name="f2">The function to run is <paramref name="f1"/> returns as a default value.</param>
            <returns>An instance of <typeparamref name="TOutput"/>, from the result of either <paramref name="f1"/>, or if that fails, <paramref name="f2"/>.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.MonadicLinqExtensions.IfDefaultDo``2(``1,System.Func{``0,``1},``0)">
            <summary>
                Runs a function, if the input value is the default for its type.
            </summary>
            <typeparam name="TInput">The type of the input.</typeparam>
            <typeparam name="TOutput">The type of the output.</typeparam>
            <param name="this">The this.</param>
            <param name="f">The f.</param>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.MonadicLinqExtensions.Fork``2(``0,System.Func{System.Collections.Generic.IEnumerable{``1},``1},System.Func{``0,``1}[])">
            <summary>
                Executes a number of operations on the input value, which all output the same type. The results are flattened, and returned as a single value.
            </summary>
            <typeparam name="TInput">The type of the input value.</typeparam>
            <typeparam name="TOutput">The type of the output value.</typeparam>
            <param name="this">The input value.</param>
            <param name="joinFunc">The function used to flatten the results from each of the <paramref name="paths"/>.</param>
            <param name="paths">A number of operations, to be performed on the input value.</param>
            <returns>A single value, of type <typeparamref name="TOutput"/>, flattened from the results of operations performed on the input value.</returns>
            <remarks>For more information, see: https://www.youtube.com/watch?v=v7WLC5As6g4</remarks>
            <example>
                var input = "aaabbbcccddd";<br/>
                var output = input.Fork(x => x.Sum(),<br/>
                    x => x.Count(y=> y == 'a'),<br/>
                    x => x.Count(y=> y == 'b'),<br/>
                    x => x.Count(y=> y == 'c'));<br/>
                output.Should().Be(9);
            </example>
        </member>
        <member name="T:ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity`1">
            <summary>
                Wraps the value in a monad, allowing functional style operations to be executed.
            </summary>
            <typeparam name="T">The type of value to wrap.</typeparam>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity`1.#ctor(`0)">
            <summary>
                Initialises a new instance of the <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity`1"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity`1.Value">
            <summary>
                Gets the raw wrapped value.
            </summary>
            <value>
                The value wrapped within this monad.
            </value>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity`1.op_Implicit(`0)~ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity{`0}">
            <summary>
                Performs an implicit conversion from <typeparamref name="T"/> to <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity`1"/>.
            </summary>
            <param name="this">The instance of <typeparamref name="T"/> to convert.</param>
            <returns>
                The result of the conversion.
            </returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity`1.op_Implicit(ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity{`0})~`0">
            <summary>
                Performs an implicit conversion from <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity`1"/> to <typeparamref name="T"/>.
            </summary>
            <param name="this">The instance of <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity`1"/> to convert.</param>
            <returns>
                The result of the conversion.
            </returns>
        </member>
        <member name="T:ApacheTech.Common.Extensions.Functional.Monadic.Identity.MonadicIdentityExtensions">
            <summary>
                Extension methods for monadic functions.
            </summary>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.Monadic.Identity.MonadicIdentityExtensions.ToIdentity``1(``0)">
            <summary>
                Wraps the value in a monad, allowing functional style operations to be executed.
            </summary>
            <param name="value">The value to wrap.</param>
            <returns>
                An instance of <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity`1"/>, which wraps the value, and provides access to functional style monadic operations.
            </returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.Monadic.Identity.MonadicIdentityExtensions.Bind``2(ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity{``0},System.Func{``0,``1})">
            <summary>
                Binds a function to a monad of type <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity`1"/>, mutating the return type dependent on the result.
            </summary>
            <typeparam name="TFrom">The type of the value wrapped within the input monad.</typeparam>
            <typeparam name="TTo">The type of the value to wrap within the output monad.</typeparam>
            <param name="this">The monad to bind the function to.</param>
            <param name="f">The function to bind.</param>
            <returns>Returns the result of the bound operation, as an instance of <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity`1"/>.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.Monadic.Identity.MonadicIdentityExtensions.Include``2(ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity{``0},System.Func{ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity{``0},``1})">
            <summary>
                Allows a secondary value to be included within an <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity`1"/>. Designed to approximate the `let` operation in Linq code.
            </summary>
            <remarks>EXPERIMENTAL: Not guaranteed to work fluently with other monadic operations.</remarks>
            <typeparam name="TFromType">The type of from type.</typeparam>
            <typeparam name="TLetType">The type of the let type.</typeparam>
            <param name="this">The monad to bind the function to.</param>
            <param name="f">The function to extract the included value, from the input.</param>
            <returns>A tuple, wrapped in an <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Identity.Identity`1"/>, which holds the raw input value, as well as the included secondary value.</returns>
        </member>
        <member name="T:ApacheTech.Common.Extensions.Functional.Monadic.Optional.Actual`1">
            <summary>
                A monadic wrapper for a type that is guaranteed to have a value, at any given stage of the function tree.
            </summary>
            <typeparam name="T">The type of value to wrap.</typeparam>
            <seealso cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Optional.Maybe`1" />
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.Monadic.Optional.Actual`1.#ctor(`0)">
            <summary>
                Initialises a new instance of the <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Optional.Actual`1"/> class.
            </summary>
            <param name="value">The value to wrap.</param>
        </member>
        <member name="P:ApacheTech.Common.Extensions.Functional.Monadic.Optional.Actual`1.Value">
            <summary>
                Gets the raw wrapped value.
            </summary>
            <value>
                The value wrapped within this monad.
            </value>
        </member>
        <member name="T:ApacheTech.Common.Extensions.Functional.Monadic.Optional.Maybe`1">
            <summary>
                A monadic wrapper for a type that may or may not be valid, during the execution of its function tree.
            </summary>
            <typeparam name="T">The type of value to wrap.</typeparam>
        </member>
        <member name="P:ApacheTech.Common.Extensions.Functional.Monadic.Optional.Maybe`1.Value">
            <summary>
                Gets the raw wrapped value.
            </summary>
            <value>
                The value wrapped within this monad.
            </value>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.Monadic.Optional.Maybe`1.op_Implicit(ApacheTech.Common.Extensions.Functional.Monadic.Optional.Maybe{`0})~`0">
            <summary>
                Performs an implicit conversion from <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Optional.Maybe`1"/> to <typeparamref name="T"/>.
            </summary>
            <param name="this">The instance of <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Optional.Maybe`1"/> to convert.</param>
            <returns>
                The result of the conversion.
            </returns>
        </member>
        <member name="T:ApacheTech.Common.Extensions.Functional.Monadic.Optional.MonadicOptionalExtensions">
            <summary>
                Extension methods for monadic functions.
            </summary>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.Monadic.Optional.MonadicOptionalExtensions.ToOptional``1(``0)">
            <summary>
                Performs an explicit conversion from <typeparamref name="T"/> to <see cref="M:ApacheTech.Common.Extensions.Functional.Monadic.Optional.MonadicOptionalExtensions.ToOptional``1(``0)"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>
                The result of the conversion.
            </returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.Monadic.Optional.MonadicOptionalExtensions.Bind``2(ApacheTech.Common.Extensions.Functional.Monadic.Optional.Maybe{``0},System.Func{``0,``1})">
            <summary>
                Binds a function to a monad of type <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Optional.Maybe`1"/>, mutating the return type dependent on the result.
            </summary>
            <typeparam name="TFromType">The type of the value wrapped within the input monad.</typeparam>
            <typeparam name="TToType">The type of the value to wrap within the output monad.</typeparam>
            <param name="this">The monad to bind the function to.</param>
            <param name="f">The function to bind.</param>
            <returns>Returns an <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Optional.Actual`1"/>, if the execution of the function succeeds; otherwise returns a <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Optional.Nothing`1"/>.</returns>
        </member>
        <member name="T:ApacheTech.Common.Extensions.Functional.Monadic.Optional.Nothing`1">
            <summary>
                A monadic wrapper for a type that is guaranteed to not have a value.
            </summary>
            <typeparam name="T">The type of value to wrap.</typeparam>
            <seealso cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Optional.Maybe`1" />
        </member>
        <member name="P:ApacheTech.Common.Extensions.Functional.Monadic.Optional.Nothing`1.Value">
            <summary>
                Gets the default value of the wrapped type.
            </summary>
            <value>
                The default value of the type wrapped within this monad.
            </value>
        </member>
        <member name="T:ApacheTech.Common.Extensions.Functional.Monadic.Validation.BadPath`1">
            <summary>
                A monadic wrapper for a type that has failed, during the execution of its function tree.
            </summary>
            <typeparam name="T">The type of value to wrap.</typeparam>
            <seealso cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Validation.Either`1" />
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.Monadic.Validation.BadPath`1.#ctor(System.Exception)">
            <summary>
                Initialises a new instance of the <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Validation.BadPath`1"/> class.
            </summary>
            <param name="exception">The exception to throw when this stage of the function tree fails.</param>
        </member>
        <member name="P:ApacheTech.Common.Extensions.Functional.Monadic.Validation.BadPath`1.Exception">
            <summary>
                Gets the exception to throw when this stage of the function tree fails.
            </summary>
            <value>
                The exception to throw when this stage of the function tree fails.
            </value>
        </member>
        <member name="P:ApacheTech.Common.Extensions.Functional.Monadic.Validation.BadPath`1.Value">
            <summary>
                Gets the default value of the wrapped type.
            </summary>
            <value>
                The default value of the type wrapped within this monad.
            </value>
        </member>
        <member name="T:ApacheTech.Common.Extensions.Functional.Monadic.Validation.Either`1">
            <summary>
                A monadic wrapper for a function type that may fail, during the execution of its function tree.
            </summary>
            <typeparam name="T">The type of value to wrap.</typeparam>
        </member>
        <member name="P:ApacheTech.Common.Extensions.Functional.Monadic.Validation.Either`1.Value">
            <summary>
                Gets the raw wrapped value.
            </summary>
            <value>
                The value wrapped within this monad.
            </value>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.Monadic.Validation.Either`1.op_Implicit(ApacheTech.Common.Extensions.Functional.Monadic.Validation.Either{`0})~`0">
            <summary>
                Performs an implicit conversion from <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Validation.Either`1"/> to <typeparamref name="T"/>.
            </summary>
            <param name="this">The instance of <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Validation.Either`1"/> to convert.</param>
            <returns>
                The result of the conversion.
            </returns>
        </member>
        <member name="T:ApacheTech.Common.Extensions.Functional.Monadic.Validation.GoodPath`1">
            <summary>
                A monadic wrapper for a function type that has succeeded thus far, during the execution of its function tree.
            </summary>
            <typeparam name="T">The type of value to wrap.</typeparam>
            <seealso cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Validation.Either`1" />
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.Monadic.Validation.GoodPath`1.#ctor(`0)">
            <summary>
                Initializes a new instance of the <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Validation.GoodPath`1"/> class.
            </summary>
            <param name="value">The value to wrap.</param>
        </member>
        <member name="P:ApacheTech.Common.Extensions.Functional.Monadic.Validation.GoodPath`1.Value">
            <summary>
                Gets the raw wrapped value.
            </summary>
            <value>
                The value wrapped within this monad.
            </value>
        </member>
        <member name="T:ApacheTech.Common.Extensions.Functional.Monadic.Validation.MonadicValidationExtensions">
            <summary>
                Extension methods for monadic functions.
            </summary>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.Monadic.Validation.MonadicValidationExtensions.ToEither``1(``0)">
            <summary>
                Performs an explicit conversion from <typeparamref name="T"/> to <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Validation.Either`1"/>.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>
                The result of the conversion.
            </returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.Monadic.Validation.MonadicValidationExtensions.Bind``2(ApacheTech.Common.Extensions.Functional.Monadic.Validation.Either{``0},System.Func{``0,``1})">
            <summary>
                Binds a function to a monad of type <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Validation.Either`1"/>, mutating the return type dependent on the result.
            </summary>
            <typeparam name="TFromType">The type of the value wrapped within the input monad.</typeparam>
            <typeparam name="TToType">The type of the value to wrap within the output monad.</typeparam>
            <param name="this">The monad to bind the function to.</param>
            <param name="f">The function to bind.</param>
            <returns>Returns a <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Validation.GoodPath`1"/>, if the execution of the function succeeds; otherwise returns a <see cref="T:ApacheTech.Common.Extensions.Functional.Monadic.Validation.BadPath`1"/>.</returns>
        </member>
        <member name="T:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions">
            <summary>
                Provides extension methods for partial application of functions.
            </summary>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``2(System.Func{``0,``1})">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``2(System.Func{``0,``1},``0)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``3(System.Func{``0,``1,``2})">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``3(System.Func{``0,``1,``2},``0)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``3(System.Func{``0,``1,``2},``0,``1)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``4(System.Func{``0,``1,``2,``3})">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``4(System.Func{``0,``1,``2,``3},``0)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``4(System.Func{``0,``1,``2,``3},``0,``1)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``4(System.Func{``0,``1,``2,``3},``0,``1,``2)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``5(System.Func{``0,``1,``2,``3,``4})">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``5(System.Func{``0,``1,``2,``3,``4},``0)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``5(System.Func{``0,``1,``2,``3,``4},``0,``1)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``5(System.Func{``0,``1,``2,``3,``4},``0,``1,``2)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``5(System.Func{``0,``1,``2,``3,``4},``0,``1,``2,``3)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``6(System.Func{``0,``1,``2,``3,``4,``5})">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``6(System.Func{``0,``1,``2,``3,``4,``5},``0)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``6(System.Func{``0,``1,``2,``3,``4,``5},``0,``1)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``6(System.Func{``0,``1,``2,``3,``4,``5},``0,``1,``2)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``6(System.Func{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``6(System.Func{``0,``1,``2,``3,``4,``5},``0,``1,``2,``3,``4)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``7(System.Func{``0,``1,``2,``3,``4,``5,``6})">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``7(System.Func{``0,``1,``2,``3,``4,``5,``6},``0)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``7(System.Func{``0,``1,``2,``3,``4,``5,``6},``0,``1)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``7(System.Func{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``7(System.Func{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``7(System.Func{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``7(System.Func{``0,``1,``2,``3,``4,``5,``6},``0,``1,``2,``3,``4,``5)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7})">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7},``0)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``8(System.Func{``0,``1,``2,``3,``4,``5,``6,``7},``0,``1,``2,``3,``4,``5,``6)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``9(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8})">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``9(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``9(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``9(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``9(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``9(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``9(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``9(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``9(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8},``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``10(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9})">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``10(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``10(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``10(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``10(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``10(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``10(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``10(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``10(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``10(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9},``0,``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10})">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``11(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11})">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``12(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12})">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``13(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <param name="t12">The twelfth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13})">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <param name="t12">The twelfth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``14(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <param name="t12">The twelfth value to apply to the function.</param>
            <param name="t13">The thirteenth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14})">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <param name="t12">The twelfth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <param name="t12">The twelfth value to apply to the function.</param>
            <param name="t13">The thirteenth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``15(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <param name="t12">The twelfth value to apply to the function.</param>
            <param name="t13">The thirteenth value to apply to the function.</param>
            <param name="t14">The fourteenth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15})">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <param name="t12">The twelfth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <param name="t12">The twelfth value to apply to the function.</param>
            <param name="t13">The thirteenth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <param name="t12">The twelfth value to apply to the function.</param>
            <param name="t13">The thirteenth value to apply to the function.</param>
            <param name="t14">The fourteenth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``16(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <param name="t12">The twelfth value to apply to the function.</param>
            <param name="t13">The thirteenth value to apply to the function.</param>
            <param name="t14">The fourteenth value to apply to the function.</param>
            <param name="t15">The fifteenth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16})">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <param name="t12">The twelfth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <param name="t12">The twelfth value to apply to the function.</param>
            <param name="t13">The thirteenth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <param name="t12">The twelfth value to apply to the function.</param>
            <param name="t13">The thirteenth value to apply to the function.</param>
            <param name="t14">The fourteenth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <param name="t12">The twelfth value to apply to the function.</param>
            <param name="t13">The thirteenth value to apply to the function.</param>
            <param name="t14">The fourteenth value to apply to the function.</param>
            <param name="t15">The fifteenth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Functional.PartialApplicationExtensions.Apply``17(System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16},``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15)">
            <summary>
                Applies a partial number of input parameters to a function, without executing it.
            </summary>
            <typeparam name="T1">The type of the first parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T2">The type of the second parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T3">The type of the third parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T4">The type of the fourth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T5">The type of the fifth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T6">The type of the sixth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T7">The type of the seventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T8">The type of the eighth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T9">The type of the ninth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T10">The type of the tenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T11">The type of the eleventh parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T12">The type of the twelfth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T13">The type of the thirteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T14">The type of the fourteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T15">The type of the fifteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="T16">The type of the sixteenth parameter of the method that this delegate encapsulates.</typeparam>
            <typeparam name="TOut">The type of the return value of the method that this delegate encapsulates.</typeparam>
            <param name="this">The function to apply the values to.</param>
            <param name="t1">The first value to apply to the function.</param>
            <param name="t2">The second value to apply to the function.</param>
            <param name="t3">The third value to apply to the function.</param>
            <param name="t4">The fourth value to apply to the function.</param>
            <param name="t5">The fifth value to apply to the function.</param>
            <param name="t6">The sixth value to apply to the function.</param>
            <param name="t7">The seventh value to apply to the function.</param>
            <param name="t8">The eighth value to apply to the function.</param>
            <param name="t9">The ninth value to apply to the function.</param>
            <param name="t10">The tenth value to apply to the function.</param>
            <param name="t11">The eleventh value to apply to the function.</param>
            <param name="t12">The twelfth value to apply to the function.</param>
            <param name="t13">The thirteenth value to apply to the function.</param>
            <param name="t14">The fourteenth value to apply to the function.</param>
            <param name="t15">The fifteenth value to apply to the function.</param>
            <param name="t16">The sixteenth value to apply to the function.</param>
            <returns>A new function, that takes in the remaining parameters that still need to be applied, and outputs the result.</returns>
        </member>
        <member name="T:ApacheTech.Common.Extensions.Reflection.AssemblyReflectionExtensions">
            <summary>
                Provides extension methods for assemblies.
            </summary>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Reflection.AssemblyReflectionExtensions.InstantiateAllTypes``1(System.Reflection.Assembly,System.Object[])">
            <summary>
                Scans an assembly for all instantiable classes of a specified type, and forms an array of instances.
            </summary>
            <typeparam name="T">The type of class to find.</typeparam>
            <param name="assembly">The assembly to scan.</param>
            <param name="constructorArgs">The constructor arguments to pass to each instance.</param>
            <returns>An array of instantiated classes of a specified type.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Reflection.AssemblyReflectionExtensions.GetDerivedTypesFromAssembly``1(``0,System.Reflection.Assembly)">
            <summary>
                Gets the derived types of a specified Attribute, within a given assembly.
            </summary>
            <typeparam name="T">The type of class level attribute to scan for.</typeparam>
            <param name="_">The attribute to scan for.</param>
            <param name="assembly">The assembly to scan.</param>
            <returns>Returns an array of Types that are decorated with the specified class level attribute.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Reflection.AssemblyReflectionExtensions.GetTypesWithAttribute``1(System.Reflection.Assembly)">
            <summary>   
                Gets the derived types of a specified Attribute, within the assembly.
            </summary>
            <typeparam name="T">The type of class level attribute to scan for.</typeparam>
            <param name="assembly">The assembly to scan.</param>
            <returns>Returns an array of Types that are decorated with the specified class level attribute.</returns>
        </member>
        <member name="T:ApacheTech.Common.Extensions.Reflection.MemberReflectionExtensions">
            <summary>
                Extension methods for use with class object members.
            </summary>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Reflection.MemberReflectionExtensions.HasCustomAttribute``1(System.Reflection.MemberInfo)">
            <summary>
                Determines whether the specified member is decorated with the given custom attribute.
            </summary>
            <typeparam name="T">The type of custom Attribute to check for.</typeparam>
            <param name="member">The member to check.</param>
            <returns><c>true</c> if the specified member is decorated with the given custom attribute; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:ApacheTech.Common.Extensions.Reflection.PropertyReflectionExtensions">
            <summary>
                Provides extension methods for reflected properties.
            </summary>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Reflection.PropertyReflectionExtensions.TryGetDefaultValue(System.Reflection.ParameterInfo,System.Object@)">
            <summary>
                Tries the get default value of a property, via its <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
            <param name="parameter">The parameter.</param>
            <param name="defaultValue">The default value.</param>
            <returns><c>true</c> if the default value has been set, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.Reflection.PropertyReflectionExtensions.TryGetDefaultValue``1(System.Reflection.ParameterInfo,``0@)">
            <summary>
                Tries the get default value of a property, via its <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
            <param name="parameter">The parameter.</param>
            <param name="defaultValue">The default value.</param>
            <returns><c>true</c> if the default value has been set, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:ApacheTech.Common.Extensions.System.AssemblyExtensions">
            <summary>
                Provides extension methods for assemblies.
            </summary>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.AssemblyExtensions.NullifyOrphanedStaticMembers(System.Reflection.Assembly)">
            <summary>
                Nullifies any orphaned static members within a given assembly.
            </summary>
            <param name="assembly">The assembly.</param>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.AssemblyExtensions.GetAllTypesImplementingOpenGenericType(System.Reflection.Assembly,System.Type)">
            <summary>
                Gets a collection of all types implementing a specified open generic interface, within a given assembly.
            </summary>
            <param name="assembly">The assembly to scan.</param>
            <param name="openGenericType">Type of the open generic.</param>
            <returns></returns>
        </member>
        <member name="T:ApacheTech.Common.Extensions.System.CollectionExtensions">
            <summary>
                Provides extension methods for collections.
            </summary>
            <summary>
                Provides extension methods for collections.
            </summary>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.ClosestTo(System.Collections.Generic.IEnumerable{System.Int32},System.Int32)">
            <summary>
                Gets the closest value to a given number, within a given set of numbers.
            </summary>
            <param name="list">The set of numbers to clamp to.</param>
            <param name="number">The number to find.</param>
            <returns>System.Int32.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.ClosestTo(System.Collections.Generic.IEnumerable{System.Byte},System.Byte)">
            <summary>
                Gets the closest value to a given number, within a given set of numbers.
            </summary>
            <param name="list">The set of numbers to clamp to.</param>
            <param name="number">The number to find.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.ClosestTo(System.Collections.Generic.IEnumerable{System.Int16},System.Int16)">
            <summary>
                Gets the closest value to a given number, within a given set of numbers.
            </summary>
            <param name="list">The set of numbers to clamp to.</param>
            <param name="number">The number to find.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.ClosestTo(System.Collections.Generic.IEnumerable{System.Int64},System.Int64)">
            <summary>
                Gets the closest value to a given number, within a given set of numbers.
            </summary>
            <param name="list">The set of numbers to clamp to.</param>
            <param name="number">The number to find.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.ClosestTo(System.Collections.Generic.IEnumerable{System.Single},System.Single)">
            <summary>
                Gets the closest value to a given number, within a given set of numbers.
            </summary>
            <param name="list">The set of numbers to clamp to.</param>
            <param name="number">The number to find.</param>
            <returns>System.Single.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.ClosestTo(System.Collections.Generic.IEnumerable{System.Double},System.Double)">
            <summary>
                Gets the closest value to a given number, within a given set of numbers.
            </summary>
            <param name="list">The set of numbers to clamp to.</param>
            <param name="number">The number to find.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.ClosestTo(System.Collections.Generic.IEnumerable{System.Decimal},System.Decimal)">
            <summary>
                Gets the closest value to a given number, within a given set of numbers.
            </summary>
            <param name="list">The set of numbers to clamp to.</param>
            <param name="number">The number to find.</param>
            <returns>System.Double.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.FirstOrNull``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
                Returns the first element of a sequence, or null if the sequence contains no elements.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return the first element of.</param>
            <returns><see langword="null" /> if <paramref name="source" /> is empty; otherwise, the first element in
            <paramref name="source" />.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.FirstOrNull``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
                Returns the first element of the sequence that satisfies a condition or null if no such element is found.
            </summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> to return an element from.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns><see langword="null" /> if <paramref name="source" /> is empty or if no element passes the test specified by
            <paramref name="predicate" />; otherwise, the first element in <paramref name="source" /> that passes the test
            specified by <paramref name="predicate" />.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.AddIfNotPresent``1(System.Collections.Generic.ICollection{``0},``0)">
            <summary>
                Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />, if it not already present in the collection.
            </summary>
            <typeparam name="TItem">The type of the elements of <paramref name="item" />.</typeparam>
            <param name="collection">The collection to add the item to.</param>
            <param name="item">The item to add.</param>
            <returns><c>true</c> if the item was added to collection, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.AddIfNotPresent``1(System.Collections.Concurrent.ConcurrentBag{``0},``0)">
            <summary>
                Adds an item to the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1" />, if it not already present in the collection.
            </summary>
            <typeparam name="TItem">The type of the elements of <paramref name="item" />.</typeparam>
            <param name="collection">The collection to add the item to.</param>
            <param name="item">The item to add.</param>
            <returns><c>true</c> if the item was added to collection, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.Random``1(System.Collections.Generic.IList{``0})">
            <summary>
                Chooses a value, at random, from a list of values.
            </summary>
            <typeparam name="T">The type of values within the collection.</typeparam>
            <param name="collection">The collection.</param>
            <returns>A value, of type <typeparamref name="T"/>, selected at random from the <paramref name="collection"/>.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.AddOrUpdateRange``2(System.Collections.Generic.SortedDictionary{``0,``1},System.Collections.Generic.IEnumerable{``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
                Adds a range of entries into a sorted dictionary.
                Includes a work around the fact that keys within Sorted Dictionaries cannot normally be overwritten.
            </summary>
            <param name="dict">The dictionary to save the syntax list to.</param>
            <param name="list">The list of syntax options to add.</param>
            <param name="predicate">The data member to search by.</param>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.AddOrUpdateRange``2(System.Collections.Generic.SortedDictionary{``0,``1},System.Collections.Generic.IEnumerable{``1},System.Func{``1,``0})">
            <summary>
                Adds a range of entries into a sorted dictionary.
                Includes a work around the fact that keys within Sorted Dictionaries cannot normally be overwritten.
            </summary>
            <param name="dict">The dictionary to save the syntax list to.</param>
            <param name="list">The list of syntax options to add.</param>
            <param name="predicate">The data member to search by.</param>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.SortedDictionary{``0,``1},System.Collections.Generic.KeyValuePair{``0,``1})">
            <summary>
                Adds an entry into a sorted dictionary.
                Includes a work around the fact that keys within Sorted Dictionaries cannot normally be overwritten.
            </summary>
            <param name="dict">The dictionary to save the syntax list to.</param>
            <param name="record">The key-value pair to add.</param>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.SortedDictionary{``0,``1},``0,``1)">
            <summary>
                Adds an entry into a sorted dictionary.
                Includes a work around the fact that keys within Sorted Dictionaries cannot normally be overwritten.
            </summary>
            <param name="dict">The dictionary to save the syntax list to.</param>
            <param name="key">The key of the value to add.</param>
            <param name="value">The value to add.</param>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.AddIfNotPresent``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
                Adds an item to the <see cref="T:System.Collections.Generic.IDictionary`2" />, if it not already present in the collection.
            </summary>
            <typeparam name="TKey">The type of the elements of <paramref name="key" />.</typeparam>
            <typeparam name="TValue">The type of the elements of <paramref name="value" />.</typeparam>
            <param name="collection">The collection to add the item to.</param>
            <param name="key">The key to add.</param>
            <param name="value">The value to add.</param>
            <returns><c>true</c> if the item was added to collection, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.AddOrUpdate``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
                Adds an item to the <see cref="T:System.Collections.Generic.IDictionary`2" />, if it not already present in the collection.
            </summary>
            <typeparam name="TKey">The type of the elements of <paramref name="key" />.</typeparam>
            <typeparam name="TValue">The type of the elements of <paramref name="value" />.</typeparam>
            <param name="collection">The collection to add the item to.</param>
            <param name="key">The key to add.</param>
            <param name="value">The value to add.</param>
            <returns><c>true</c> if the item was added to collection, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.EnsureExistence``1(System.Collections.Generic.List{``0},``0,System.Boolean)">
            <summary>
                Adds an item to the <see cref="T:System.Collections.Generic.IEnumerable`1" />, if it should exist within the collection, and doesn't already.
                If the value shouldn't exist, and it does, it will be removed from the collection.
            </summary>
            <typeparam name="TValue">The type of the elements of <paramref name="value" />.</typeparam>
            <param name="collection">The collection to add the item to.</param>
            <param name="value">The value to add.</param>
            <param name="shouldExist">Whether or not the value should exist within the collection.</param>
            <returns><c>true</c> if the item was added to collection, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.FirstOrNull``1(System.Collections.Generic.IDictionary{System.String,``0},System.Func{System.Collections.Generic.KeyValuePair{System.String,``0},System.Boolean})">
            <summary>
                Returns the first element of the sequence that satisfies a condition or null if no such element is found.
            </summary>
            <typeparam name="TValue">The type of the elements of <paramref name="source" />.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IDictionary`2" /> to return an element from.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <returns><see langword="null" /> if <paramref name="source" /> is empty or if no element passes the test specified by
            <paramref name="predicate" />; otherwise, the first element in <paramref name="source" /> that passes the test
            specified by <paramref name="predicate" />.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source" /> or <paramref name="predicate" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
                Determines whether the given dictionary contains any key within a given list of keys.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="source">The source collection.</param>
            <param name="keys">The list of keys.</param>
            <returns>
              <c>true</c> if the specified keys contains any; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.ContainsAnyKey``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IEnumerable{``0})">
            <summary>
                Determines whether the given dictionary contains any key within a given list of keys.
            </summary>
            <typeparam name="TKey">The type of the key held in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the values held in the dictionary.</typeparam>
            <param name="source">The source collection.</param>
            <param name="keys">The list of keys.</param>
            <returns>
              <c>true</c> if [contains any key] [the specified keys]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.PurgeValues``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
                Purges the specified dictionary. Disposes all instances held as values, and then clears the dictionary.
            </summary>
            <typeparam name="TKey">The type of the key held in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the values held in the dictionary.</typeparam>
            <param name="dictionary">The dictionary to purge.</param>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.PurgeKeys``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
                Purges the specified dictionary. Disposes all instances held as keys, and then clears the dictionary.
            </summary>
            <typeparam name="TKey">The type of the key held in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the values held in the dictionary.</typeparam>
            <param name="dictionary">The dictionary to purge.</param>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.PurgeKeysAndValues``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
                Purges the specified dictionary. Disposes all instances held as keys, and then clears the dictionary.
            </summary>
            <typeparam name="TKey">The type of the key held in the dictionary.</typeparam>
            <typeparam name="TValue">The type of the values held in the dictionary.</typeparam>
            <param name="dictionary">The dictionary to purge.</param>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.Purge``1(System.Collections.Generic.ICollection{``0})">
            <summary>
                Purges the specified list, by disposing all elements, then clearing the list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">The list.</param>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.DisposeAll``1(System.Collections.Generic.ICollection{``0})">
            <summary>
                Disposes all elements of a list.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list">The list.</param>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.RemoveIfPresent``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
                Removes an item to the <see cref="T:System.Collections.Generic.ICollection`1" />, if it is already present in the collection.
            </summary>
            <returns><c>true</c> if the item was removed from the collection, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.CollectionExtensions.RemoveIfPresent``1(System.Collections.Generic.ICollection{``0},``0)">
            <summary>
                Removes an item to the <see cref="T:System.Collections.Generic.ICollection`1" />, if it is already present in the collection.
            </summary>
            <typeparam name="TItem">The type of the elements of <paramref name="item" />.</typeparam>
            <param name="collection">The collection to remove the item from.</param>
            <param name="item">The item to remove.</param>
            <returns><c>true</c> if the item was removed from the collection, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:ApacheTech.Common.Extensions.System.ColourExtensions">
            <summary>
                Extension Methods for when working with Colours.
            </summary>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.ColourExtensions.UpdateColourChannel(System.Drawing.Color,ApacheTech.Common.Extensions.Enum.ColourChannel,System.Int32)">
            <summary>
                Updates a single colour channel within a <see cref="T:System.Drawing.Color"/>
            </summary>
            <param name="colour">The colour to change the channel of.</param>
            <param name="channel">The channel to change the value of.</param>
            <param name="value">The value to set.</param>
            <returns>A new instance of <see cref="T:System.Drawing.Color"/>, with the updated values.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.ColourExtensions.ToNormalisedRgba(System.Drawing.Color)">
            <summary>
                Normalises the specified colour. That being, it converts each channel value into a <see cref="T:System.Double"/>, between 0.0 and 1.0, by dividing each value by 255.0.
            </summary>
            <param name="colour">The colour to normalise.</param>
            <returns>A double array, with normalised values set in RGBA order.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.ColourExtensions.ToNormalisedArgb(System.Drawing.Color)">
            <summary>
                Normalises the specified colour. That being, it converts each channel value into a <see cref="T:System.Double"/>, between 0.0 and 1.0, by dividing each value by 255.0.
            </summary>
            <param name="colour">The colour to normalise.</param>
            <returns>A double array, with normalised values set in ARGB order.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.ColourExtensions.ToNormalisedRgba(System.Double[])">
            <summary>
                Normalises the specified colour. That being, it converts each channel value into a <see cref="T:System.Double"/>, between 0.0 and 1.0, by dividing each value by 255.0.
            </summary>
            <param name="colour">The colour to normalise.</param>
            <returns>A double array, with normalised values set in RGBA order.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.ColourExtensions.ToNormalisedArgb(System.Double[])">
            <summary>
                Normalises the specified colour. That being, it converts each channel value into a <see cref="T:System.Double"/>, between 0.0 and 1.0, by dividing each value by 255.0.
            </summary>
            <param name="colour">The colour to normalise.</param>
            <returns>A double array, with normalised values set in ARGB order.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.ColourExtensions.ToArgb(System.String)">
            <summary>
                Converts a string representation of a colour, to an ARGB integer value.
            </summary>
            <param name="colourString">The colour string.</param>
            <returns>An integer representation of the ARGB values of a colour.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.ColourExtensions.ToColour(System.String)">
            <summary>
                Converts a string representation of a colour, to a <see cref="T:System.Drawing.Color"/>.
            </summary>
            <param name="colour">The colour to convert.</param>
            <returns>A <see cref="T:System.Drawing.Color"/>, converted from the string input.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.ColourExtensions.ColourValue(System.String)">
            <summary>
                Converts a string representation of a colour, to an integer value.
            </summary>
            <param name="colour">The colour to convert.</param>
            <returns>An integer representation of the input colour.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.ColourExtensions.ToRgbHexString(System.Drawing.Color)">
            <summary>
                Converts a <see cref="T:System.Drawing.Color"/> to an RGB Hexadecimal string.
            </summary>
            <param name="c">The colour to convert.</param>
            <returns>A hex string, in the format #RRGGBB.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.ColourExtensions.ToArgbHexString(System.Drawing.Color)">
            <summary>
                Converts a <see cref="T:System.Drawing.Color"/> to an ARGB Hexadecimal string.
            </summary>
            <param name="c">The colour to convert.</param>
            <returns>A hex string, in the format #AARRGGBB.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.ColourExtensions.ToRgbaHexString(System.Drawing.Color)">
            <summary>
                Converts a <see cref="T:System.Drawing.Color"/> to an RGBA Hexadecimal string.
            </summary>
            <param name="c">The colour to convert.</param>
            <returns>A hex string, in the format #RRGGBBAA.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.ColourExtensions.ToRgbString(System.Drawing.Color)">
            <summary>
                Converts a <see cref="T:System.Drawing.Color"/> to an RGB() string.
            </summary>
            <param name="c">The colour to convert.</param>
            <returns>A string, in the format RGB(0-255, 0-255, 0-255).</returns>
        </member>
        <member name="T:ApacheTech.Common.Extensions.System.EnumExtensions">
            <summary>
                Provides extension methods for enums.
            </summary>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.EnumExtensions.GetDescription(System.Enum)">
            <summary>
                Gets the description for the enum member, decorated with a <see cref="T:System.ComponentModel.DescriptionAttribute"/>.
            </summary>
            <param name="value">The value.</param>
            <returns>A string representation of the description of the enum member, decorated with a DescriptionAttribute.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.EnumExtensions.Count``1(``0)">
            <summary>
                Gets the number of values within this enumeration.
            </summary>
            <typeparam name="T">The type of enum to evaluate.</typeparam>
            <param name="en">The enum to evaluate.</param>
            <returns>The number of entries within this enumeration.</returns>
        </member>
        <member name="T:ApacheTech.Common.Extensions.System.NumericalExtensions">
            <summary>
                Provides extension methods for numeric types.
            </summary>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.NumericalExtensions.IsWithinRange(System.Int32,System.Int32,System.Int32)">
            <summary>
                Determines whether a value with within a given range.
            </summary>
            <param name="val">The value.</param>
            <param name="min">The inclusive minimum value.</param>
            <param name="max">The inclusive maximum value.</param>
            <returns>
              <c>true</c> if the value is within range of the minimum and maximum values; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.NumericalExtensions.FormatLargeNumber(System.Int32,System.String)">
            <summary>
                Formats the number in text form, with numerical group separators.
            </summary>
            <param name="number">The number to format.</param>
            <param name="locale">The locale to use to determine separator amounts, and deliminators.</param>
            <returns>Returns a string representation of the number, in human readable form.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.NumericalExtensions.FormatLargeNumber(System.Int64,System.String)">
            <summary>
                Formats the number in text form, with numerical group separators.
            </summary>
            <param name="number">The number to format.</param>
            <param name="locale">The locale to use to determine separator amounts, and deliminators.</param>
            <returns>Returns a string representation of the number, in human readable form.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.NumericalExtensions.FormatLargeNumber(System.Single,System.String)">
            <summary>
                Formats the number in text form, with numerical group separators.
            </summary>
            <param name="number">The number to format.</param>
            <param name="locale">The locale to use to determine separator amounts, and deliminators.</param>
            <returns>Returns a string representation of the number, in human readable form.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.NumericalExtensions.FormatLargeNumber(System.Double,System.String)">
            <summary>
                Formats the number in text form, with numerical group separators.
            </summary>
            <param name="number">The number to format.</param>
            <param name="locale">The locale to use to determine separator amounts, and deliminators.</param>
            <returns>Returns a string representation of the number, in human readable form.</returns>
        </member>
        <member name="T:ApacheTech.Common.Extensions.System.ObjectExtensions">
            <summary>
                Provides extension methods for objects.
            </summary>
        </member>
        <member name="F:ApacheTech.Common.Extensions.System.ObjectExtensions.ExtendedData">
            <summary>
            The extended data
            </summary>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.ObjectExtensions.DynamicProperties(System.Object)">
            <summary>
                Gets a dynamic collection of properties associated with an object instance, with a lifetime scoped to the lifetime of the object.
            </summary>
            <param name="obj">The object the properties are associated with.</param>
            <returns>A dynamic collection of properties associated with an object instance.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.ObjectExtensions.To``1(System.Object)">
            <summary>
                Dynamically casts the object instance to a specified type.
            </summary>
            <typeparam name="T">The type of object to cast to.</typeparam>
            <param name="obj">The instance to cast.</param>
            <returns>An instance of Type <typeparamref name="T" />.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.ObjectExtensions.With``1(``0,System.Action{``0})">
            <summary>
                A close approximation to Visual Basic's "With" keyword, that allows batch setting of Properties, without needing to initialise the object.
            </summary>
            <typeparam name="T">The type of object to work with.</typeparam>
            <param name="item">The item to work with.</param>
            <param name="work">The work to be done.</param>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.ObjectExtensions.IsDefaultValue``1(``0)">
            <summary>
                Determines whether the specified object is equal to the default instance of the object.
            </summary>
            <typeparam name="T">The type of object to determine the value of.</typeparam>
            <param name="this">The instance of the object to determine the value of.</param>
            <returns>
              <c>true</c> if the object is set to the default value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:ApacheTech.Common.Extensions.System.StringExtensions">
            <summary>
                Provides extension methods for strings.
            </summary>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.IfNullOrWhitespace(System.String,System.String)">
            <summary>
                Returns a default string, if a specified string is <see langword="null" />,empty, or consists only of white-space characters.
            </summary>
            <param name="str">The string.</param>
            <param name="defaultString">The default string.</param>
            <returns>If the input string,<paramref name="str"/>, is null, empty, or whitespace, returns <paramref name="defaultString"/>, otherwise returns <paramref name="str"/>.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.IfNullOrEmpty(System.String,System.String)">
            <summary>
                Returns a default string, if a specified string is <see langword="null" />, or empty.
            </summary>
            <param name="str">The string.</param>
            <param name="defaultString">The default string.</param>
            <returns>If the input string,<paramref name="str"/>, is null or empty, returns <paramref name="defaultString"/>, otherwise returns <paramref name="str"/>.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.StartsWithAny(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Determines whether the beginning of this string instance matches any of the specified strings.
            </summary>
            <param name="str">The original string.</param>
            <param name="values">The list of strings to compare.</param>
            <returns>true if <paramref name="values">value</paramref> matches the beginning of this string; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="values">value</paramref> is null.</exception>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.StartsWithAny(System.String,System.String[])">
            <summary>
                Determines whether the beginning of this string instance matches any of the specified strings.
            </summary>
            <param name="str">The original string.</param>
            <param name="values">The list of strings to compare.</param>
            <returns>true if <paramref name="values">value</paramref> matches the beginning of this string; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="values">value</paramref> is null.</exception>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.ContainsAny(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Determines whether the string instance contains any of the specified strings.
            </summary>
            <param name="str">The original string.</param>
            <param name="values">The list of strings to compare.</param>
            <returns>true if <paramref name="values">value</paramref> matches the beginning of this string; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="values">value</paramref> is null.</exception>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.ContainsAny(System.String,System.String[])">
            <summary>
                Determines whether the string instance contains any of the specified strings.
            </summary>
            <param name="str">The original string.</param>
            <param name="values">The list of strings to compare.</param>
            <returns>true if <paramref name="values">value</paramref> matches the beginning of this string; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="values">value</paramref> is null.</exception>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.ToOrdinal(System.Int32)">
            <summary>
                Converts a number to its ordinal string representation.
            </summary>
            <param name="num">The number to convert.</param>
            <returns>A string that represents the number, in ordinal form.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.ContainsLetters(System.String)">
            <summary>
                Determines whether a string contains any letters.
            </summary>
            <param name="input">the input string</param>
            <returns><c>true</c> is the string contains letters [Aa..Zz]; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.OnlyContainsLetters(System.String)">
            <summary>
                Determines whether a string contains any letters.
            </summary>
            <param name="input">the input string</param>
            <returns><c>true</c> is the string contains letters [Aa..Zz]; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.ContainsNumbers(System.String)">
            <summary>
                Determines whether a string contains any numbers.
            </summary>
            <param name="input">the input string</param>
            <returns><c>true</c> is the string contains numbers [0..9]; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.OnlyContainsNumbers(System.String)">
            <summary>
                Determines whether a string contains any numbers.
            </summary>
            <param name="input">the input string</param>
            <returns><c>true</c> is the string contains numbers [0..9]; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.GetNumbers(System.String)">
            <summary>
               Strips out non-numeric characters in string, returning only digits
               ref.: https://stackoverflow.com/questions/3977497/stripping-out-non-numeric-characters-in-string
            </summary>
            <param name="input">the input string</param>
            <returns>the input string numeric part: for example, if input is "XYZ1234A5U6" it will return "123456"</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.GetLetters(System.String)">
            <summary>
                Strips out numeric and special characters in string, returning only letters
            </summary>
            <param name="input">the input string</param>
            <returns>the letters contained within the input string: for example, if input is "XYZ1234A5U6~()" it will return "XYZAU"</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.GetLettersAndNumbers(System.String)">
            <summary>
                Strips out any non-numeric/non-digit character in string, returning only letters and numbers
            </summary>
            <param name="input">the input string</param>
            <returns>the letters contained within the input string: for example, if input is "XYZ1234A5U6~()" it will return "XYZ1234A5U6"</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.SplitPascalCase(System.String)">
            <summary>
                Splits a string into sentence form, from a pascal case word.
            </summary>
            <param name="input">The input.</param>
            <returns>Returns a <see cref="T:System.String"/>, where each word of the input string is separated by a space: for example, if input is "SplitPascalCase", it will return "Split Pascal Case".</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.EnsureEndsWith(System.String,System.String)">
            <summary>
                Appends a suffix to a string, if the suffix does not already appear at the end of the string.
            </summary>
            <param name="text">The text.</param>
            <param name="suffix">The suffix.</param>
            <returns>A new <see cref="T:System.String"/> with the assured suffix.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.EnsureStartsWith(System.String,System.String)">
            <summary>
                Prepends a prefix to a string, if the prefix does not already appear at the start of the string.
            </summary>
            <param name="text">The text.</param>
            <param name="prefix">The prefix.</param>
            <returns>A new <see cref="T:System.String"/> with the assured prefix.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.Pluralise(System.String,System.Int32,System.String)">
            <summary>
                Pluralises the specified string, based on a input value.
            </summary>
            <param name="singular">The singular.</param>
            <param name="value">The value.</param>
            <param name="plural">The plural.</param>
            <returns>Either the <paramref name="singular"/> value, or <paramref name="plural"/> value, based on whether <paramref name="value"/> is 1, or otherwise.</returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.StartsWithAnyOf(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Determines whether a string starts with any strings within a given set.
            </summary>
            <param name="this">The string to test.</param>
            <param name="subStrings">The set of sub-strings to search for.</param>
            <returns><c>true</c>, if the string does start with any of the sub-strings; otherwise, <c>false</c></returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.StartsWithNoneOf(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Determines whether a string starts with any strings within a given set.
            </summary>
            <param name="this">The string to test.</param>
            <param name="subStrings">The set of sub-strings to search for.</param>
            <returns><c>false</c>, if the string does start with any of the sub-strings; otherwise, <c>true</c></returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.ContainsAnyOf(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Determines whether a string contains any strings within a given set.
            </summary>
            <param name="this">The string to test.</param>
            <param name="subStrings">The set of sub-strings to search for.</param>
            <returns><c>true</c>, if the string contains any of the sub-strings; otherwise, <c>false</c></returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.ContainsNoneOf(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Determines whether a string contains any strings within a given set.
            </summary>
            <param name="this">The string to test.</param>
            <param name="subStrings">The set of sub-strings to search for.</param>
            <returns><c>false</c>, if the string contains any of the sub-strings; otherwise, <c>true</c></returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.EndsWithAnyOf(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Determines whether a string ends with any strings within a given set.
            </summary>
            <param name="this">The string to test.</param>
            <param name="subStrings">The set of sub-strings to search for.</param>
            <returns><c>true</c>, if the string does end with any of the sub-strings; otherwise, <c>false</c></returns>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.StringExtensions.EndsWithNoneOf(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Determines whether a string ends with any strings within a given set.
            </summary>
            <param name="this">The string to test.</param>
            <param name="subStrings">The set of sub-strings to search for.</param>
            <returns><c>false</c>, if the string does end with any of the sub-strings; otherwise, <c>true</c></returns>
        </member>
        <member name="T:ApacheTech.Common.Extensions.System.TaskExtensions">
            <summary>
                Provides extension methods for tasks.
            </summary>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.TaskExtensions.OnCompletedSuccessfully(System.Threading.Tasks.Task,System.Action,System.Boolean)">
            <summary>
                Executes an action when a task has been completed successfully.
            </summary>
            <param name="task">The task to await the completion of.</param>
            <param name="continuation">The action to perform after the task has completed.</param>
            <param name="continueOnCapturedContext"><c>true</c> to attempt to marshall the continuation back to the original context captured, otherwise <c>false</c>.</param>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.TaskExtensions.OnCompletedSuccessfully(System.Threading.Tasks.Task,System.Func{System.Threading.Tasks.Task},System.Boolean)">
            <summary>
                Executes an action when a task has been completed successfully.
            </summary>
            <param name="task">The task to await the completion of.</param>
            <param name="continuation">The function to perform after the task has completed.</param>
            <param name="continueOnCapturedContext"><c>true</c> to attempt to marshall the continuation back to the original context captured, otherwise <c>false</c>.</param>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.TaskExtensions.OnCompletedSuccessfully``1(System.Threading.Tasks.Task{``0},System.Action{``0},System.Boolean)">
            <summary>
                Executes an action when a task has been completed successfully.
            </summary>
            <param name="task">The task to await the completion of.</param>
            <param name="continuation">The action to perform after the task has completed.</param>
            <param name="continueOnCapturedContext"><c>true</c> to attempt to marshall the continuation back to the original context captured, otherwise <c>false</c>.</param>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.TaskExtensions.OnCompletedSuccessfully``1(System.Threading.Tasks.Task{``0},System.Func{``0,System.Threading.Tasks.Task},System.Boolean)">
            <summary>
                Executes an action when a task has been completed successfully.
            </summary>
            <param name="task">The task to await the completion of.</param>
            <param name="continuation">The function to perform after the task has completed.</param>
            <param name="continueOnCapturedContext"><c>true</c> to attempt to marshall the continuation back to the original context captured, otherwise <c>false</c>.</param>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.TaskExtensions.OnCompletedSuccessfully``2(System.Threading.Tasks.Task{``0},System.Func{``0,``1},System.Boolean)">
            <summary>
                Executes an action when a task has been completed successfully.
            </summary>
            <param name="task">The task to await the completion of.</param>
            <param name="continuation">The function to perform after the task has completed.</param>
            <param name="continueOnCapturedContext"><c>true</c> to attempt to marshall the continuation back to the original context captured, otherwise <c>false</c>.</param>
        </member>
        <member name="M:ApacheTech.Common.Extensions.System.TaskExtensions.OnCompletedSuccessfully``2(System.Threading.Tasks.Task{``0},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Boolean)">
            <summary>
                Executes an action when a task has been completed successfully.
            </summary>
            <param name="task">The task to await the completion of.</param>
            <param name="continuation">The function to perform after the task has completed.</param>
            <param name="continueOnCapturedContext"><c>true</c> to attempt to marshall the continuation back to the original context captured, otherwise <c>false</c>.</param>
        </member>
    </members>
</doc>
